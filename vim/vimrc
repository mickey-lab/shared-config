" Load ~/.vim/bundle packages.
call pathogen#infect()
call pathogen#helptags()

" Use Vim defaults
set nocompatible

" Colorscheme settings.
syntax enable
set background=dark

" UTF8 or die.
set encoding=utf8

" GUI window size, font and theme
if has('gui_running')
  set columns=132 lines=43
  set guifont=Source\ Code\ Pro\ 12
  colorscheme solarized
  let g:airline_theme='solarized'
endif

" Numbered lines.
set number

" Keep cursor away from edges of screen.
set so=14

" Highlight cursor line.
augroup CursorLine
  au!
  au VimEnter,WinEnter,BufWinEnter,FocusGained * setlocal cursorline
  au VimEnter,WinEnter,BufWinEnter,FocusGained * setlocal cursorcolumn
  au FocusLost,WinLeave * setlocal nocursorline
  au FocusLost,WinLeave * setlocal nocursorcolumn
augroup END

" Mouse usage enabled in normal mode.
set mouse=n
" Set xterm2 mouse mode to allow resizing of splits with mouse inside Tmux.
set ttymouse=xterm2

" Control character highlighting.
set list listchars=tab:⇥⇥,eol:↵
set ignorecase smartcase

" Tab settings.
set expandtab
set shiftwidth=2
set ts=2
set smarttab
set cindent
let indent_guides_enable_on_vim_startup = 1

" Parens matching.
set showmatch
set matchtime=5

" EasyMotion word jumping.
let g:EasyMotion_leader_key = "'"

" Always show current position.
set ruler

" No screen redrawing during macros.
set lazyredraw

" Command bar prettification.
set cmdheight=1
set showmode
set showcmd
set shortmess=atI

" Search settings.
set magic
set incsearch
set hlsearch
set ignorecase
set smartcase

" No extra files.
set noswapfile
set nobackup

" WiLd menu.
set wildmenu
set wildignore=*.o,*~,*.pyc

" Aesthetics.
set title
set laststatus=2

" No annoying alerts.
set noerrorbells
set novisualbell

" Filetype detection and indentation.
filetype plugin indent on

" NERDTree settings.
let NERDTreeMinimalUI=1
map <Leader>n :NERDTreeToggle<CR>

" Make trailing whitespace annoyingly highlighted.
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()

" Use Unicode symbols to replace multi-char Haskell operators.
let g:haskell_conceal_wide = 1

" Check syntax of files on open
let g:syntastic_check_on_open=1

" Better :sign interface symbols
let g:syntastic_error_symbol = '✗'
let g:syntastic_warning_symbol = '!'

" Change pylint default indentation to 2 spaces and 132 columns
let g:syntastic_python_pylint_post_args='--indent-string="  " --max-line-length=132'

" Remove the small delay between pressing Esc and entering Normal mode.
if ! has('gui_running')
  set ttimeoutlen=10
  augroup FastEscape
    autocmd!
    au InsertEnter * set timeoutlen=0
    au InsertLeave * set timeoutlen=1000
  augroup END
endif

" HARD MODE SETTINGS
  " Minimal GUI.
  set guioptions=c

  " Automatically leave insert mode after 'updatetime' (4s by default).
  " au CursorHoldI * stopinsert

  " Disable h,j,k,l keys by default.
  " autocmd VimEnter,BufNewFile,BufReadPost * silent! call HardMode()

  " Toggle hardmode
  " nnoremap <leader>h <Esc>:call ToggleHardMode()<CR>

  " Disable arrow keys.
  " let g:HardMode_level = 'wannabe'
